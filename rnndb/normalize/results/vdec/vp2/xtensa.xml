<?xml version="1.0" encoding="UTF-8"?>
<database xmlns:n1="http://www.w3.org/2001/XMLSchema-instance" n1:schemaLocation="http://nouveau.freedesktop.org/ rules-ng.xsd">
    <import file="copyright.xml"/>
    <import file="nvchipsets.xml"/>
    <import file="g80_defs.xml"/>
    <bitset name="g84_vp2_target" inline="yes">
        <bitfield low="0" high="3" name="DMAIDX"/>
        <bitfield pos="4" name="MODE">
            <value value="0" name="DMAOBJ"/>
            <value value="1" name="PHYS"/>
        </bitfield>
        <bitfield low="5" high="6" name="PHYS_TARGET" type="g80_mem_target"/>
    </bitset>
    <group name="nv_xlmi_common">
        <reg32 offset="0x38000" name="UPARM" length="0x40"/>
        <reg32 offset="0x38100" name="XT_REGION_BASE" stride="0x10" length="16" shr="8"/>
        <reg32 offset="0x38104" name="XT_REGION_SETUP" stride="0x10" length="16">
            <bitfield low="0" high="6" name="TARGET" type="g84_vp2_target"/>
            <bitfield low="8" high="9" name="ENDIAN_SWAP_SIZE">
                <value value="0" name="1"> equiivalent to no swapping </value>
                <value value="1" name="2"/>
                <value value="2" name="4"/>
                <value value="3" name="8"/>
            </bitfield>
            <bitfield pos="10" name="ENDIAN_SWAP_ENABLE"/>
        </reg32>
        <reg32 offset="0x38108" name="XT_REGION_LIMIT" stride="0x10" length="16" shr="8"/>
        <reg32 offset="0x3810c" name="XT_REGION_SCRATCH" stride="0x10" length="16"/>
        <reg32 offset="0x38208" name="CHANNEL_CUR"/>
        <reg32 offset="0x3820c" name="CHANNEL_NEXT"/>
        <reg32 offset="0x38210" name="DMAOBJ_LOAD" access="w">
            <bitfield low="0" high="15" name="INST"/>
            <bitfield low="16" high="19" name="DMAIDX"/>
        </reg32>
        <reg32 offset="0x38218" name="LIMIT_FAULT_ADDR"> 3821c engine-specific </reg32>
        <reg32 offset="0x38220" name="FIFO_DATA"/>
        <reg32 offset="0x38224" name="FIFO_MTHD"/>
        <reg32 offset="0x38228" name="FIFO_EMPTY"/>
        <reg32 offset="0x38268" name="X2H_INTR">
            <doc>Write anything to trigger X2H interrupt, read returns 1 if host INTR X2H bit is set, 0 otherwise.</doc>
        </reg32>
        <reg32 offset="0x3826c" name="X2H_INTR_SCRATCH"/>
        <reg32 offset="0x38270" name="UPARM_PULL_ENABLE" access="w"> if this and FIFO_CTRL bit 0 enabled, methods 0x400..0x4fc will be automatically processed by moving the value into UPARM regs </reg32>
        <reg32 offset="0x382b8" name="SCRATCH" length="5"/>
        <enum name="nv_vp2_pm_signal" inline="yes">
            <value value="0" name="NOP"/>
            <value value="1" name="CLEAR"/>
            <value value="2" name="PULSE"/>
            <value value="3" name="SET"/>
        </enum>
        <reg32 offset="0x382cc" name="PM_SIGNAL">
            <bitfield low="0" high="1" name="0" type="nv_vp2_pm_signal"/>
            <bitfield low="2" high="3" name="1" type="nv_vp2_pm_signal"/>
            <bitfield low="4" high="5" name="2" type="nv_vp2_pm_signal"/>
            <bitfield low="6" high="7" name="3" type="nv_vp2_pm_signal"/>
            <bitfield low="8" high="9" name="PM_TRIGGER" type="nv_vp2_pm_signal"/>
            <bitfield low="10" high="11" name="WRCACHE_FLUSH" type="nv_vp2_pm_signal"/>
            <bitfield low="12" high="13" name="6" type="nv_vp2_pm_signal"/>
            <bitfield low="14" high="15" name="7" type="nv_vp2_pm_signal"/>
        </reg32>
        <reg32 offset="0x382d4" name="TIME_LOW"/>
        <reg32 offset="0x382d8" name="TIME_HIGH"> 382dc engine-specific </reg32>
        <reg32 offset="0x382e0" name="SCRATCH_X2H"/>
        <reg32 offset="0x382e4" name="SCRATCH_H2X"/>
    </group>
    <group name="g84_xtensa_common">
        <bitset name="g84_xtensa_intr" inline="yes">
            <bitfield pos="2" name="X2H"/>
            <bitfield pos="3" name="VM_FAULT"/>
            <bitfield pos="4" name="WATCHDOG"/>
            <bitfield pos="5" name="LIMIT_FAULT"/>
        </bitset>
        <reg32 offset="0x00c" name="UPARM_IDX"/>
        <reg32 offset="0x010" name="UPARM"/>
        <reg32 offset="0x014" name="FIFO_MTHD"/>
        <reg32 offset="0x018" name="FIFO_DATA"/>
        <reg32 offset="0x01c" name="FIFO_STATUS">
            <bitfield pos="0" name="EMPTY"/>
            <bitfield low="4" high="31" name="UNK4"> XXX: what's the correct high bit? </bitfield>
        </reg32>
        <reg32 offset="0x020" name="INTR" type="g84_xtensa_intr"/>
        <reg32 offset="0x028" name="CHANNEL_CUR"/>
        <reg32 offset="0x02c" name="CHANNEL_NEXT"/>
        <reg32 offset="0x030" name="XT_REGION_BASE" stride="0xc" length="16" shr="8"/>
        <reg32 offset="0x034" name="XT_REGION_SETUP" stride="0xc" length="16">
            <bitfield low="0" high="6" name="TARGET" type="g84_vp2_target"/>
            <bitfield low="8" high="9" name="ENDIAN_SWAP_SIZE">
                <value value="0" name="1"> equiivalent to no swapping </value>
                <value value="1" name="2"/>
                <value value="2" name="4"/>
                <value value="3" name="8"/>
            </bitfield>
            <bitfield pos="10" name="ENDIAN_SWAP_ENABLE"/>
        </reg32>
        <reg32 offset="0x038" name="XT_REGION_LIMIT" stride="0xc" length="16" shr="8"/>
        <reg32 offset="0x0fc" name="HOST_IO_INDEX"/>
        <reg32 offset="0x124" name="XT_INTR_TRIGGER">
            <bitfield pos="0" name="NMI"/>
            <bitfield pos="1" name="H2X"/>
        </reg32>
        <reg32 offset="0x128" name="CG" type="G80_CG"/>
        <reg32 offset="0x130" name="XT_REG_ADDR"/>
        <reg32 offset="0x134" name="XT_REG_DATA"/>
        <reg32 offset="0x138" name="XT_PC"/>
        <reg32 offset="0x13c" name="LIMIT_FAULT_ADDR"/>
        <reg32 offset="0x148" name="SCRATCH" length="5" stride="0xc"/>
        <reg32 offset="0x184" name="INTR_EN" type="g84_xtensa_intr"> for host </reg32>
        <reg32 offset="0x18c" name="TIME_LOW"/>
        <reg32 offset="0x190" name="TIME_HIGH"/>
        <reg32 offset="0x19c" name="XT_REGION_SCRATCH" length="16"/>
        <reg32 offset="0x1dc" name="SCRATCH_X2H"/>
        <reg32 offset="0x1e0" name="SCRATCH_H2X"/>
    </group>
</database>
