<?xml version="1.0" encoding="UTF-8"?>
<database xmlns:n1="http://www.w3.org/2001/XMLSchema-instance" n1:schemaLocation="http://nouveau.freedesktop.org/ rules-ng.xsd">
    <import file="copyright.xml"/>
    <import file="nvchipsets.xml"/>
    <import file="fifo/nv_object.xml"/>
    <import file="g80_defs.xml"/>
    <import file="graph/gk104_p2mf.xml"/>
    <domain name="SUBCHAN" bare="yes">
        <stripe prefix="obj-class" variants="GK104_COMPUTE-">
            <doc>State that also exists on GK104_3D (like CODE,TEMP,TIC,TSC_ADDRESS)
		seems to be kept separate from the 3D object.</doc>
            <use-group name="gk104_upload"/>
            <reg32 offset="0x0200" name="UNK0200" variants="GK110_COMPUTE-"/>
            <reg32 offset="0x0204" name="UNK0204" variants="GK110_COMPUTE-"/>
            <reg32 offset="0x0208" name="UNK0208" variants="GK110_COMPUTE-"/>
            <reg32 offset="0x0214" name="SHARED_BASE">
                <doc>32 bit address, not shifted. Contents of $sbase register.</doc>
            </reg32>
            <reg32 offset="0x021c" name="MEM_BARRIER">
                <bitfield low="0" high="2" name="UNK0"/>
                <bitfield pos="4" name="UNK4"/>
                <bitfield pos="12" name="UNK12"/>
            </reg32>
            <reg32 offset="0x0240" name="UNK0240" type="boolean"/>
            <reg32 offset="0x0244" name="UNK244_TIC_FLUSH"/>
            <reg32 offset="0x0248" name="UNK0248">
                <bitfield low="0" high="5" name="UNK0"/>
                <bitfield low="8" high="23" name="UNK8"/>
            </reg32>
            <reg32 offset="0x0274" name="UNK0274"> ff </reg32>
            <reg32 offset="0x0278" name="UNK0278"> ffffffff </reg32>
            <reg32 offset="0x027c" name="UNK027C"> 8001ffff </reg32>
            <reg32 offset="0x0280" name="UNK0280"> ffffffff </reg32>
            <reg32 offset="0x0284" name="UNK0284"> ffffffff </reg32>
            <reg32 offset="0x0288" name="UNK0288"> ffffffff </reg32>
            <reg32 offset="0x0290" name="UNK0290"> ffffffff </reg32>
            <reg32 offset="0x02b0" name="UNK02B0"> ff </reg32>
            <reg32 offset="0x02b4" name="LAUNCH_DESC_ADDRESS" shr="8"/>
            <reg32 offset="0x02b8" name="UNK02B8"> ffffffff </reg32>
            <reg32 offset="0x02bc" name="LAUNCH"> 3 </reg32>
            <reg32 offset="0x02c4" name="UNK02C4" variants="GK110_COMPUTE-"/>
            <array offset="0x02e4" name="MP_TEMP_SIZE" length="2" stride="0xc">
                <doc>The TEMP area is split among MPs, where each MP gets assigned a single contiguous block.
			This specifies the size a single MP is awarded, so it should be set to the actual size of the
			buffer divided by the number of MPs that are available.
			</doc>
                <reg32 offset="0x0" name="HIGH"/>
                <reg32 offset="0x4" name="LOW"> aligned to 0x8000 </reg32>
                <reg32 offset="0x8" name="MASK"> bits 0x1ff </reg32>
            </array>
            <reg32 offset="0x0310" name="UNK0310"> ffff </reg32>
            <reg32 offset="0x0500" name="FIRMWARE" length="0x20"/>
            <reg32 offset="0x077c" name="LOCAL_BASE"> 32 bit address, not shifted, appears in $lbase </reg32>
            <reg32 offset="0x0790" name="TEMP_ADDRESS_HIGH"/>
            <reg32 offset="0x0794" name="TEMP_ADDRESS_LOW"/>
            <reg32 offset="0x0d94" name="UNK0D94">
                <doc>0-1, shared with fermi</doc>
            </reg32>
            <reg32 offset="0x0de4" name="WATCHDOG_TIMER" type="uint"> 0 means infinite timeout </reg32>
            <reg32 offset="0x0f44" name="UNK0F44" length="4"> ffffffff </reg32>
            <reg32 offset="0x1040" name="UNK1040" length="12"> ffffffff </reg32>
            <reg32 offset="0x1288" name="UNK1288_TIC_FLUSH"/>
            <reg32 offset="0x12a8" name="UNK12A8" variants="GK110_COMPUTE-"/>
            <reg32 offset="0x1330" name="TSC_FLUSH">
                <bitfield pos="0" name="SPECIFIC"/>
                <bitfield low="4" high="25" name="ENTRY"/>
            </reg32>
            <reg32 offset="0x1334" name="TIC_FLUSH">
                <bitfield pos="0" name="SPECIFIC"/>
                <bitfield low="4" high="25" name="ENTRY"/>
            </reg32>
            <reg32 offset="0x1338" name="TEX_CACHE_CTL">
                <bitfield pos="0" name="UNK0"/>
                <bitfield low="4" high="25" name="ENTRY"/>
            </reg32>
            <reg32 offset="0x1424" name="UNK1424_TSC_FLUSH"/>
            <reg32 offset="0x1550" name="COND_ADDRESS_HIGH"/>
            <reg32 offset="0x1554" name="COND_ADDRESS_LOW"/>
            <reg32 offset="0x1558" name="COND_MODE" type="g80_cond_mode"/>
            <reg32 offset="0x155c" name="TSC_ADDRESS_HIGH"/>
            <reg32 offset="0x1560" name="TSC_ADDRESS_LOW"/>
            <reg32 offset="0x1564" name="TSC_LIMIT"/>
            <reg32 offset="0x1574" name="TIC_ADDRESS_HIGH"/>
            <reg32 offset="0x1578" name="TIC_ADDRESS_LOW"/>
            <reg32 offset="0x157c" name="TIC_LIMIT"/>
            <reg32 offset="0x1608" name="CODE_ADDRESS_HIGH"/>
            <reg32 offset="0x160c" name="CODE_ADDRESS_LOW"/>
            <reg32 offset="0x1690" name="UNK1690" type="boolean"/>
            <reg32 offset="0x1698" name="FLUSH">
                <bitfield pos="0" name="CODE"/>
                <bitfield pos="4" name="GLOBAL"/>
                <bitfield pos="12" name="CB"/>
            </reg32>
            <reg32 offset="0x1944" name="UNK1944">
                <doc>0-2, no icmd, shared with other objects</doc>
            </reg32>
            <reg32 offset="0x1a24" name="DELAY"/>
            <reg32 offset="0x1a2c" name="UNK1A2C" length="5">
                <doc>Shared with fermi</doc>
            </reg32>
            <reg32 offset="0x1b00" name="QUERY_ADDRESS_HIGH"/>
            <reg32 offset="0x1b04" name="QUERY_ADDRESS_LOW"/>
            <reg32 offset="0x1b08" name="QUERY_SEQUENCE"/>
            <reg32 offset="0x1b0c" name="QUERY_GET">
                <bitfield low="0" high="1" name="MODE">
                    <value value="0" name="WRITE"/>
                    <value value="3" name="WRITE_INTR_NRHOST"/>
                </bitfield>
                <bitfield pos="20" name="INTR"/>
                <bitfield pos="28" name="SHORT"> XXX more bitfields </bitfield>
            </reg32>
            <reg32 offset="0x2608" name="TEX_CB_INDEX"/>
            <reg32 offset="0x260c" name="UNK260C"> MP+0x74+(i*4) </reg32>
            <reg32 offset="0x335c" name="MP_PM_SET" length="8">
                <doc>These set the value of the respective counter register.</doc> NOTE: mmio MP+0x0: 0x408000 for counter group a enable, 0x400080 for counter group b enable  byte i of MP+0x4 </reg32>
            <reg32 offset="0x337c" name="MP_PM_A_SIGSEL" length="4" type="gk104_mp_pm_siggroup_a">
                <doc>These methods determine the signal groups that can be accessed
			by SRCSEL(0..3).</doc> byte i of MP+0x8 </reg32>
            <reg32 offset="0x338c" name="MP_PM_B_SIGSEL" length="4" type="gk104_mp_pm_siggroup_b">
                <doc>These methods determine the signal groups that can be accessed
			by SRCSEL(4..7).</doc> MP+0x130+(i*4) </reg32>
            <reg32 offset="0x339c" name="MP_PM_SRCSEL" length="8">
                <doc>
			GRPj selects the signal group for function input j. It is an index into PM_SIGSEL_A/B.
			SIGj selects the individual signal of the signal group.
			</doc>
                <bitfield high="1" low="0" name="GRP0"/>
                <bitfield high="4" low="2" name="SIG0"/>
                <bitfield high="6" low="5" name="GRP1"/>
                <bitfield high="9" low="7" name="SIG1"/>
                <bitfield high="11" low="10" name="GRP2"/>
                <bitfield high="14" low="12" name="SIG2"/>
                <bitfield high="16" low="15" name="GRP3"/>
                <bitfield high="19" low="17" name="SIG3"/>
                <bitfield high="21" low="20" name="GRP4"/>
                <bitfield high="24" low="22" name="SIG4"/>
                <bitfield high="26" low="25" name="GRP5"/>
                <bitfield high="29" low="27" name="SIG5"/>
            </reg32>
            <reg32 offset="0x33bc" name="MP_PM_FUNC" length="8">
                <doc>i-th method programs i-th counter, where counters 0 to 3 access SIGSEL/SRCSEL_A,
			and counters 4 to 7 refer to SIGSEL/SRCSEL_B.

			In LOGOP mode, PM_SRCSEL_A/B (GRPi,SIGi), i=0..3 determine src i of
			the logic operation described by FUNC (i.e. bit i of the index of the
			bit of FUNC that determines whether the counter is incremented or not).

			In B6 mode, PM_SRCSEL_A/B (GRPi,SIGi) determine bit i of the value the
			counter is incremented by. That value is masked with FUNC.

			In LOGOP_B6 mode, the counter is incremented by x (made of (GRPi,SIGi)) if
			LOGOP is true, i.e. bit (x AND 15) of FUNC is 1.

			The PULSE variants only increment the counter when the LOGOP result changes from 1 to 0.
			</doc>
                <bitfield high="3" low="0" name="MODE" type="gk104_mp_pm_mode"> bits [i*4,i*4+3] of MP+0x5c,58 (note reverse order !) </bitfield>
                <bitfield high="19" low="4" name="FUNC"> i-th 16-bit word of MP+0x60..0x6c </bitfield>
            </reg32>
            <reg32 offset="0x33dc" name="MP_PM_UNK33DC"/>
        </stripe>
    </domain>
    <domain name="GK104_COMPUTE_LAUNCH_DESC" size="0x100">
        <reg32 offset="0x18" name="6">
            <bitfield high="11" low="10" name="NOTIFY"> or something; causes page fault by DISPATCH but not at GF100_GRAPH_NOTIFY_ADDRESS </bitfield>
        </reg32>
        <reg32 offset="0x20" name="PROG_START">
            <doc>Byte offset from CODE_ADDRESS.</doc>
        </reg32>
        <reg32 offset="0x30" name="12">
            <bitfield high="30" low="0" name="GRIDDIM_X"/>
        </reg32>
        <reg32 offset="0x34" name="GRIDDIM_YZ">
            <bitfield high="15" low="0" name="Y"/>
            <bitfield high="31" low="16" name="Z"/>
        </reg32>
        <reg32 offset="0x44" name="17">
            <bitfield high="15" low="0" name="SHARED_ALLOC">
                <doc>Aligned to 0x100.</doc>
            </bitfield>
        </reg32>
        <reg32 offset="0x48" name="18">
            <bitfield high="31" low="16" name="BLOCKDIM_X"/>
        </reg32>
        <reg32 offset="0x4c" name="BLOCKDIM_YZ">
            <bitfield high="15" low="0" name="Y"/>
            <bitfield high="31" low="16" name="Z"/>
        </reg32>
        <reg32 offset="0x50" name="20">
            <bitfield high="7" low="0" name="CB_VALID">
                <doc>Bitmask to enable c0[] to c7[]. Yes, there are only 8.
			c8[] is treated as c0[]. Size in CB_CONFIG_1 should be &gt; 0
			if CB is valid.</doc>
            </bitfield>
            <bitfield high="30" low="29" name="CACHE_SPLIT">
                <value value="1" name="16K_SHARED_48K_L1"/>
                <value value="2" name="32K_SHARED_32K_L1"/>
                <value value="3" name="48K_SHARED_16K_L1"/>
            </bitfield>
        </reg32>
        <reg32 offset="0x74" name="CB_CONFIG_0" length="8" stride="8">
            <bitfield high="31" low="0" name="ADDRESS_LOW"/>
            <doc>Aligned to 0x100.</doc>
        </reg32>
        <reg32 offset="0x78" name="CB_CONFIG_1" length="8" stride="8">
            <bitfield high="7" low="0" name="ADDRESS_HIGH"/>
            <bitfield high="31" low="15" name="SIZE"> 15, not a typo, 0x10000 must be encodable </bitfield>
        </reg32>
        <reg32 offset="0xb4" name="45">
            <bitfield high="19" low="0" name="LOCAL_POS_ALLOC"/>
            <bitfield high="31" low="27" name="BARRIER_ALLOC"/>
        </reg32>
        <reg32 offset="0xb8" name="46">
            <bitfield high="19" low="0" name="LOCAL_NEG_ALLOC"/>
            <bitfield high="29" low="24" name="GPR_ALLOC"/>
        </reg32>
        <reg32 offset="0xbc" name="47">
            <bitfield high="19" low="0" name="WARP_CSTACK_SIZE"> aligned to 0x200 </bitfield>
        </reg32>
    </domain>
</database>
