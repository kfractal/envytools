<?xml version="1.0" encoding="UTF-8"?>
<database xmlns:n1="http://www.w3.org/2001/XMLSchema-instance" n1:schemaLocation="http://nouveau.freedesktop.org/ rules-ng.xsd">
    <import file="copyright.xml"/>
    <import file="nvchipsets.xml"/>
    <import file="g80_defs.xml"/>
    <group name="g80_pgraph_mp">
        <reg64 offset="0x00" name="CODE_CONFIG_0">
            <bitfield low="0" high="21" name="FP_START_ID" shr="2"/>
            <bitfield low="22" high="25" name="FP_CALL_LIMIT_LOG"/>
            <bitfield low="26" high="47" name="VP_START_ID" shr="2"/>
            <bitfield low="48" high="51" name="VP_CALL_LIMIT_LOG"/>
        </reg64>
        <reg64 offset="0x08" name="CODE_CONFIG_1">
            <bitfield low="0" high="21" name="GP_START_ID" shr="2"/>
            <bitfield low="22" high="25" name="GP_CALL_LIMIT_LOG"/>
            <bitfield low="26" high="57" name="UNK1568_UNK02B0"/>
        </reg64>
        <reg32 offset="0x10" name="PM_SIG">
            <bitfield low="0" high="7" name="0"/>
            <bitfield low="8" high="15" name="1"/>
            <bitfield low="16" high="23" name="2"/>
            <bitfield low="24" high="31" name="3"/>
        </reg32>
        <reg32 offset="0x14" name="ERROR_CODE">
            <bitfield pos="0" name="STACK_UNDERFLOW"/>
            <bitfield pos="1" name="STACK_MISMATCH"/>
            <bitfield pos="2" name="QUADON_ACTIVE"/>
            <bitfield pos="3" name="TIMEOUT"/>
            <bitfield pos="4" name="DECODE_ERROR"/>
            <bitfield pos="5" name="PM_OVERFLOW"/>
            <bitfield pos="6" name="BREAKPOINT" variants="G84-"/>
            <bitfield pos="7" name="UNK7" variants="G200-"/>
            <bitfield pos="16" name="UNK16"/>
            <bitfield pos="17" name="UNK17"/>
        </reg32>
        <reg64 offset="0x18" name="UNK18">
            <bitfield low="0" high="7" name="UNK12A8_UNK0228_UNK12"/>
            <bitfield pos="8" name="UNK12A8_UNK0228_UNK0"/>
            <bitfield low="9" high="16" name="UNK12A8_UNK0228_UNK4"/>
            <bitfield pos="17" name="UNK12AC_UNK0290"/>
            <bitfield low="18" high="25" name="PM_SIG_UNIT1_0"/>
            <bitfield low="26" high="33" name="PM_SIG_UNIT1_1"/>
            <bitfield low="34" high="41" name="PM_SIG_UNIT1_2"/>
            <bitfield low="42" high="49" name="PM_SIG_UNIT1_3"/>
            <bitfield low="50" high="57" name="UNK50"/>
            <bitfield pos="60" name="UNK60"/>
            <bitfield pos="61" name="UNK61" variants="G200-"/>
        </reg64>
        <reg64 offset="0x20" name="DECODE_ERROR">
            <bitfield pos="0" name="TRAP_INSTRUCTION"/>
            <bitfield pos="1" name="ILLEGAL_OPCODE"/>
            <bitfield pos="2" name="UNK2"/>
            <bitfield pos="3" name="UNK3"/>
            <bitfield pos="4" name="UNK4"/>
            <bitfield pos="5" name="UNK5"/>
            <bitfield pos="6" name="UNK6"/>
            <bitfield pos="7" name="UNK7"/>
            <bitfield pos="8" name="UNALIGNED_LONG_INSTRUCTION"/>
            <bitfield pos="9" name="ILLEGAL_POSTINCR"/>
            <bitfield pos="10" name="LD_A_ST_O_NON_VP_GP"/>
            <bitfield pos="11" name="UNK11"/>
            <bitfield pos="12" name="UNK12"/>
            <bitfield pos="13" name="UNK13"/>
            <bitfield pos="14" name="INTERP_NON_FP"/>
            <bitfield pos="15" name="EMIT_NON_GP"/>
            <bitfield pos="16" name="UNK16"/>
            <bitfield pos="17" name="UNK17"/>
            <bitfield pos="18" name="UNK18"/>
            <bitfield pos="19" name="UNK19"/>
            <bitfield pos="20" name="UNK20"> XXX has something to do with $a7? </bitfield>
            <bitfield pos="21" name="UNK21"/>
            <bitfield pos="22" name="UNK22"/>
            <bitfield pos="23" name="ILLEGAL_MEMORY_BYTE"/>
            <bitfield pos="24" name="ILLEGAL_MEMORY_SIGN"/>
            <bitfield pos="25" name="ILLEGAL_MEMORY_SIZE"/>
            <bitfield pos="26" name="UNK26"/>
            <bitfield pos="27" name="UNK27"/>
            <bitfield pos="28" name="UNK28"/>
            <bitfield pos="29" name="UNK29" variants="G84-"/>
            <bitfield pos="30" name="UNK30" variants="G200-"/>
            <bitfield pos="31" name="UNK31" variants="G200-"/>
            <bitfield low="32" high="55" name="ADDR"/>
            <bitfield low="56" high="60" name="WARP"/>
        </reg64>
        <reg64 offset="0x28" name="PM_COUNTER" length="4"/>
        <reg64 offset="0x38" name="PM_FUNC">
            <bitfield low="0" high="15" name="0"/>
            <bitfield low="16" high="31" name="1"/>
            <bitfield low="32" high="47" name="2"/>
            <bitfield low="48" high="63" name="3"/>
        </reg64>
        <reg32 offset="0x40" name="REG_ALLOC">
            <bitfield low="0" high="7" name="GP_TEMP"/>
            <bitfield low="8" high="15" name="FP_TEMP"/>
            <bitfield low="16" high="23" name="VP_TEMP"/>
            <bitfield low="24" high="30" name="UNK24"/>
            <bitfield pos="31" name="UNK31" variants="G200-"/>
        </reg32>
        <reg32 offset="0x44" name="PM_SIG_UNIT0">
            <bitfield low="0" high="7" name="0"/>
            <bitfield low="8" high="15" name="1"/>
            <bitfield low="16" high="23" name="2"/>
            <bitfield low="24" high="31" name="3"/>
        </reg32>
        <reg64 offset="0x48" name="UNK48"/>
        <reg64 offset="0x50" name="UNK50"/>
        <reg64 offset="0x58" name="CONTROL">
            <bitfield low="0" high="7" name="FP_INTERPOLANT_COUNT_NONFLAT"/>
            <bitfield low="8" high="15" name="FP_INTERPOLANT_COUNT"/>
            <bitfield low="16" high="20" name="WATCHDOG"/>
            <bitfield pos="21" name="KILL"> XXX: also convered by the WATCHDOG ICMD? </bitfield>
            <bitfield pos="22" name="PM_OVERFLOW_TRAP_ENABLE_0"/>
            <bitfield pos="23" name="PM_OVERFLOW_TRAP_ENABLE_1"/>
            <bitfield pos="24" name="PM_OVERFLOW_TRAP_ENABLE_2"/>
            <bitfield pos="25" name="PM_OVERFLOW_TRAP_ENABLE_3"/>
            <bitfield low="26" high="28" name="PM_UNIT_0" type="g80_mp_pm_unit"/>
            <bitfield low="29" high="31" name="PM_UNIT_1" type="g80_mp_pm_unit"/>
            <bitfield low="32" high="34" name="PM_UNIT_2" type="g80_mp_pm_unit"/>
            <bitfield low="35" high="37" name="PM_UNIT_3" type="g80_mp_pm_unit"/>
            <bitfield pos="38" name="FP_INTERPOLANT_UNK28"/>
            <bitfield pos="39" name="FP_INTERPOLANT_UMASK_W"/>
            <bitfield pos="40" name="FP_INTERPOLANT_UMASK_Z"/>
            <bitfield pos="41" name="FP_INTERPOLANT_UMASK_Y"/>
            <bitfield pos="42" name="FP_INTERPOLANT_UMASK_X"/>
            <bitfield pos="43" name="UNK1690_UNK8"/>
            <bitfield pos="44" name="UNK1690_UNK4"/>
            <bitfield pos="45" name="UNK1690_UNK0"/>
            <bitfield pos="46" name="PM_MODE_0" type="g80_mp_pm_mode"/>
            <bitfield pos="47" name="PM_MODE_1" type="g80_mp_pm_mode"/>
            <bitfield pos="48" name="PM_MODE_2" type="g80_mp_pm_mode"/>
            <bitfield pos="49" name="PM_MODE_3" type="g80_mp_pm_mode"/>
            <bitfield low="50" high="53" name="UNK50"/>
            <bitfield pos="54" name="PM_OVERFLOW_TRAP_0"/>
            <bitfield pos="55" name="PM_OVERFLOW_TRAP_1"/>
            <bitfield pos="56" name="PM_OVERFLOW_TRAP_2"/>
            <bitfield pos="57" name="PM_OVERFLOW_TRAP_3"/>
            <bitfield low="58" high="59" name="UNK58" variants="G84-"/>
            <bitfield low="60" high="63" name="UNK60" variants="GT215-"/>
        </reg64>
        <reg64 offset="0x60" name="UNK60">
            <bitfield pos="0" name="UNK1690_UNK037C_ALWAYS_DERIV"/>
            <bitfield pos="1" name="UNK1690_UNK037C_UNK16"/>
            <bitfield low="2" high="5" name="PM_SIG_UNIT2_0"/>
            <bitfield low="6" high="9" name="PM_SIG_UNIT2_1"/>
            <bitfield low="10" high="13" name="PM_SIG_UNIT2_2"/>
            <bitfield low="14" high="17" name="PM_SIG_UNIT2_3"/>
            <bitfield low="18" high="19" name="UNK18" variants="G200-"/>
        </reg64>
        <reg64 offset="0x68" name="UNK68" variants="G200-"> 3f </reg64>
        <reg64 offset="0x70" name="OPCODE"/>
        <reg64 offset="0x78" name="PC_PREVIOUS">
            <bitfield low="0" high="23" name="ADDR"/>
            <bitfield low="24" high="28" name="WARP"/>
        </reg64> the MP context spaces.  12-bit addressing </group>
    <domain name="G80_MP_CTX1" width="64" varset="chipset">
        <array offset="0" name="STACK" stride="0x10" length="32">
            <reg64 offset="0" name="ENTRY" length="16">
                <bitfield high="21" low="0" name="PC" shr="2"> 22 and 23 are useless </bitfield>
                <bitfield high="28" low="24" name="WARPID"/>
                <bitfield high="31" low="29" name="TYPE">
                    <value value="1" name="BRANCH"/>
                    <value value="2" name="CALL1"/>
                    <value value="3" name="CALL2"/>
                    <value value="4" name="BREAK"/>
                    <value value="5" name="QUADON"/>
                    <value value="6" name="JOINAT"/>
                </bitfield>
                <bitfield high="63" low="32" name="LANEMASK"/>
            </reg64>
        </array>
        <reg64 offset="0x200" name="MASK0" length="32">
            <doc>State of each lane. The following combinations are possible:
		<ul>
                    <li>M1=0, M2=0: active thread, or merely branched off.</li>
                    <li>M1=1, M2=0: thread breaked.</li>
                    <li>M1=0, M2=1: thread returned.</li>
                    <li>M1=1, M2=1: thread exitted.</li>
                </ul>
            </doc>
            <bitfield high="31" low="0" name="M1"/>
            <bitfield high="63" low="32" name="M2"/>
        </reg64>
        <reg64 offset="0x220" name="STACK_CONTROL" length="32">
            <bitfield high="12" low="0" name="PTR">
                <doc>Index of current top of the stack entry [ie. last pushed
			entry]. 0x1fff if stack empty.</doc>
            </bitfield>
            <bitfield high="31" low="21" name="UNK"> some sort of valid masks... </bitfield>
        </reg64>
        <reg64 offset="0x240" name="MASK1" length="32">
            <bitfield high="31" low="0" name="ACTIVE">
                <doc>Mask of active lanes in a warp.</doc>
            </bitfield>
            <bitfield high="63" low="32" name="DEAD">
                <doc>Mask of dead lanes, ie. ones that will
			be skipped by texture insns with &quot;live&quot; flag
			set. For CP, VP, GP set to 1 for unused lanes
			in a warp. For FP, set to 1 for unused lanes
			as well as non-visible pixels that are part
			of visible quad and will be used for computing
			derivatives.</doc>
            </bitfield>
        </reg64>
        <reg64 offset="0x260" name="MASK2" length="32">
            <bitfield low="0" high="31" name="UNK0" variants="G80:G84"/>
            <bitfield high="63" low="32" name="DEAD" variants="G84-">
                <doc>Aliases the previous one. nothing to see here.</doc>
            </bitfield>
        </reg64>
        <reg64 offset="0x280" name="PC" shr="2" length="32" variants="G80:G84">
            <doc>The per-warp program counters.</doc>
        </reg64>
        <reg64 offset="0x2a0" name="WARPS" variants="G80:G84">
            <bitfield high="31" low="0" name="ACTIVE">
                <doc>Mask of currently active warps</doc>
            </bitfield>
            <bitfield high="63" low="32" name="SKIPPED">
                <doc>Mask of warps which will be skipped by the CONT command.
			Note that hitting any sort of breakpoint by a warp causes
			the corresponding bit to get set.
			</doc>
            </bitfield>
        </reg64>
        <reg64 offset="0x2a1" name="MISC2" variants="G80:G84">
            <bitfield pos="0" name="UNK0"/>
            <bitfield pos="1" name="UNK1"/>
            <bitfield pos="2" name="SINGLE_STEP">
                <doc>Enables single stepping.</doc>
            </bitfield>
            <bitfield pos="3" name="CONT_TRIGGER">
                <doc>Continues paused execution.</doc> XXX: not in scan? </bitfield>
            <bitfield pos="4" name="BREAK">
                <doc>Will cause next CUDA execution to start in paused state.</doc>
            </bitfield>
            <bitfield high="63" low="32" name="CRASH_MASK">
                <doc>Mask of warps which blew up</doc>
            </bitfield> something happens at 0x300+... </reg64> 12-bit addr </domain>
    <domain name="G80_MP_CTX2" width="64" varset="chipset">
        <array offset="0" name="UNK0" stride="2" length="32">
            <reg64 offset="0" name="SLOT" length="2"/>
        </array>
        <array offset="0x40" name="BARRIER_WARP" stride="2" length="32">
            <reg64 offset="0" name="SLOT" length="2">
                <bitfield pos="2" name="UNKALWAYSSET1"/>
                <bitfield high="11" low="6" name="UNK2"/>
                <bitfield high="29" low="26" name="BARID"/>
                <bitfield pos="30" name="INCR"/>
                <bitfield pos="31" name="WAIT"/>
                <bitfield high="45" low="32" name="UNK46"/>
                <bitfield pos="53" name="UNKALWAYSSET2"/>
                <bitfield pos="61" name="UNK8"/>
            </reg64>
        </array>
        <reg64 offset="0x80" name="UNK2" length="32"/>
        <reg64 offset="0xa0" name="UNK3" length="32"> made of 40-bit quantities </reg64>
        <array offset="0xc0" name="UNK4" stride="2" length="32">
            <reg64 offset="0" name="UNK0"/>
            <reg64 offset="1" name="UNK1"/>
        </array>
        <reg64 offset="0x100" name="BARRIER_COUNTER" length="16" variants="G80:G84">
            <doc>The counters associated with barriers. Inexplicably shifted left by 1 bit. 6-bit on pre-G200, most likely 7-bit on NVAx.</doc>
        </reg64>
        <reg64 offset="0x110" name="UNK6" length="8" variants="G80:G84"> bits f </reg64> 12-bit addr </domain>
    <domain name="G80_MP_CTX3" width="64" varset="chipset">
        <reg64 offset="0" name="ADDRESS" length="0x400">
            <doc>$a1-$a4 registers... this shit is so ugly,
		I won't even bother expressing it with proper
		arrays. Basically, register $ax of warp y
		lane z is at bits 16*(z&amp;3)...16*(z&amp;3)+15
		of qword index
		((z&amp;0x10)&gt;&gt;4) + (x-1)*2 + y*8 + ((z&amp;0xc)&gt;&gt;2) * 0x100
		</doc>
        </reg64>
        <reg64 offset="0x400" name="COND" length="0x100">
            <doc>$c0-$c3 registers. Reg $cx of warp y
		lane z is at bits 4*(z&amp;0xf)...4*(z&amp;0xf)+3
		of qword index 
		</doc>
        </reg64>
        <reg64 offset="0x500" name="LOC0" length="0x20">
            <doc>General information about a given warp.</doc>
            <bitfield pos="0" name="REG_PACKED">
                <doc>Use the &quot;packed&quot; format for $r storage.
			If this bit is 0, the &quot;striped&quot; format for $r storage is used.
			Register $rx for thread y in this warp can be find in group
			REG_START + x, at rindex REG_RINDEX + ((y&amp;0x10)&gt;&gt;4),
			in word (y&amp;0xf). Otherwise, the &quot;packed&quot; format for $r
			storage is used, and reg $rx of thread y is stored in group
			REG_GROUP_START + (x&gt;&gt;2) at rindex ((x&amp;3)^(warpid&amp;3)).
			Also, the warps are limitted to 16 threads in this case.</doc>
            </bitfield>
            <bitfield high="3" low="1" name="UNK1"> 000 for VP, 001 for GP, 100 for FP, 110 for CP? hm. </bitfield>
            <bitfield high="5" low="4" name="REG_RINDEX">
                <doc>The RINDEX to be used for $r regs in this warp, if format is not PACKED.</doc>
            </bitfield>
            <bitfield high="13" low="6" name="REG_START">
                <doc>The starting group number of $r regs in this warp.</doc>
            </bitfield>
            <bitfield high="20" low="14" name="REG_NUM">
                <doc>Number of $r regs in this warp.</doc>
            </bitfield>
            <bitfield high="28" low="21" name="SHARED_START">
                <doc>For CPs, the starting group number of s[] memory of this warp.</doc>
            </bitfield>
            <bitfield high="36" low="29" name="SHARED_LIMIT">
                <doc>For CPs, number of s[] groups - 1.</doc>
            </bitfield>
            <bitfield high="52" low="45" name="BARRIER_START"/>
        </reg64>
        <reg64 offset="0x520" name="LOC1" length="0x20">
            <doc>More general information about a given warp. 00000000XXXXa0a0 for FPs, 0 for VPs, ??? for CPs, ??? for GPs? hm. </doc>
        </reg64>
        <reg64 offset="0x540" name="A7" length="0x20">
            <bitfield low="0" high="31" name="UNK0"/>
            <doc>$a7 register. Yes, it's per-warp. And it's CP-only.
		Don't ask me why. At least no insane reordering
		is involved.</doc>
            <bitfield low="32" high="47" name="A7"/>
            <bitfield low="48" high="63" name="UNK48" variants="G200-"/>
        </reg64>
        <reg64 offset="0x600" name="UNK600" length="0x100"> 16-bit really... </reg64>
        <reg64 offset="0x700" name="UNK700" length="0x40" variants="G200-"> 16-bit </reg64> 8-bit addr </domain>
    <domain name="G80_MP_CTX4" width="64">
        <reg64 offset="0x00" name="UNK00" length="0x100"> 8 per warp actually </reg64> 8-bit addr; new on G200 </domain>
    <domain name="G80_MP_CTX5" width="64">
        <reg64 offset="0x00" name="UNK00" length="0x100"/> 7-bit addr </domain>
    <domain name="G80_MP_CTX6" width="64">
        <reg64 offset="0x00" name="UNK00" length="0x80"> 4 per warp actually </reg64> 10-bit addr </domain>
    <domain name="G80_MP_CTX7" width="64">
        <reg64 offset="0x000" name="UNK000" length="0x300"/> 9-bit addr </domain>
    <domain name="G80_MP_CTX8" width="64">
        <reg64 offset="0x000" name="UNK000" length="0x180"/> 12-bit addr </domain>
    <domain name="G80_MP_CTX10" width="64">
        <reg64 offset="0x000" name="UNK000" length="0x200"/> ???-bit addr </domain>
    <domain name="G80_MP_CTX11" width="64">
        <reg64 offset="0x000" name="UNK000" length="0x80"> 32-bit </reg64> 10-bit addr  all of the following are in .26 fixed format, for some reason duplicated to make a 52-bit value  1/x for x in [1, 2) </domain>
    <domain name="G80_MP_SFU_LUT" width="64">
        <reg64 offset="0x000" name="RCP_LUT_ZERO" length="0x80"> 1/sqrt(x) for x in [1, 2) </reg64>
        <reg64 offset="0x080" name="RSQRT_1_LUT_ZERO" length="0x40"> 1/sqrt(x) for x in [2, 4) </reg64>
        <reg64 offset="0x0c0" name="RSQRT_2_LUT_ZERO" length="0x40"> sin(x) for x in [0, pi/2) </reg64>
        <reg64 offset="0x100" name="SIN_LUT_ZERO" length="0x40"> 2^x/2 for x in [0, 1) </reg64>
        <reg64 offset="0x140" name="EX2_LUT_ZERO" length="0x40"> lg2(x) for x in [1, 2) </reg64>
        <reg64 offset="0x180" name="LG2_LUT_ZERO" length="0x40"> 1 - 1/x^2 for x in [1, 2) </reg64>
        <reg64 offset="0x200" name="RCP_LUT_ONE" length="0x80"> 1 - 1/sqrt((x^3)) for x in [1, 2) </reg64>
        <reg64 offset="0x280" name="RSQRT_1_LUT_ONE" length="0x40"> 1 - 4/sqrt((x^3)) for x in [2, 4) </reg64>
        <reg64 offset="0x2c0" name="RSQRT_2_LUT_ONE" length="0x40"> pi/2*cos(x)/2 for x in [0, pi/2)</reg64>
        <reg64 offset="0x300" name="SINS_LUT_ONE" length="0x40"> ln(2)*2^x/2 for x in [0, 1) </reg64>
        <reg64 offset="0x340" name="EX2_LUT_ONE" length="0x40"> lg2(e)/x/2 for x in [1, 2) </reg64>
        <reg64 offset="0x380" name="LG2_LUT_ONE" length="0x40"/>
    </domain>
</database>
